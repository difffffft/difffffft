import{_ as s,o as n,c as a,R as p}from"./chunks/framework.vVZmquDz.js";const e="/difffffft/assets/image-1.bQyPP8bV.png",u=JSON.parse('{"title":"Tencent前端代码规范","description":"","frontmatter":{"title":"Tencent前端代码规范","date":"2023-11-29","categories":["前端"]},"headers":[],"relativePath":"mds/front/2023-11-29-tencent前端代码规范/index.md","filePath":"mds/front/2023-11-29-tencent前端代码规范/index.md","lastUpdated":1704444471000}'),l={name:"mds/front/2023-11-29-tencent前端代码规范/index.md"},i=p('<h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><p><img src="'+e+`" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>--.git                 版本控制系统</span></span>
<span class="line"><span>--.husky               代码提交规范约束</span></span>
<span class="line"><span>--.github              github配置文件</span></span>
<span class="line"><span>--.vscode              vscode配置文件</span></span>
<span class="line"><span>  --extensions.json    插件推荐配置文件</span></span>
<span class="line"><span>  --setting.json       配置文件</span></span>
<span class="line"><span>--docs                 项目文档，可以给README使用</span></span>
<span class="line"><span>--mock                 项目的MOCK环境，当没有后端服务的时候，需要定义MOCK接口</span></span>
<span class="line"><span>--node_modules         项目依赖文件</span></span>
<span class="line"><span>--public               项目静态文件，不会被打包编译</span></span>
<span class="line"><span>--src                  项目源码</span></span>
<span class="line"><span>  --api                项目接口目录</span></span>
<span class="line"><span>    --model            接口的参数和响应都是一个model，主要用于类型提示，对应的后端</span></span>
<span class="line"><span>    --xxx.ts           项目的接口</span></span>
<span class="line"><span>  --assets             项目资源目录</span></span>
<span class="line"><span>    --assets-bg.png    项目资源文件</span></span>
<span class="line"><span>  --components         项目基础组件</span></span>
<span class="line"><span>  --config             项目配置文件</span></span>
<span class="line"><span>  --constants          项目的常量</span></span>
<span class="line"><span>  --hooks              项目自定义Hooks</span></span>
<span class="line"><span>  --layout             项目基础布局，路由渲染的页面在基础布局里面显示</span></span>
<span class="line"><span>  --locales            项目国际化，i18n</span></span>
<span class="line"><span>  --pages              项目的页面</span></span>
<span class="line"><span>  --router             项目的路由配置页</span></span>
<span class="line"><span>  --store              项目全局状态管理，vuex和pinia</span></span>
<span class="line"><span>  --style              项目的样式文件</span></span>
<span class="line"><span>    --font-family.less 项目字体</span></span>
<span class="line"><span>    --index.less       项目样式注册的入口</span></span>
<span class="line"><span>    --layout.less      项目布局的样式</span></span>
<span class="line"><span>    --reset.less       项目对部分样式进行重置</span></span>
<span class="line"><span>    --variables.less   项目的LESS变量</span></span>
<span class="line"><span>  --types              项目TS的类型存放地（全局的）</span></span>
<span class="line"><span>  --utils              项目工具类</span></span>
<span class="line"><span>  --App.vue            项目页面入口</span></span>
<span class="line"><span>  --main.ts            项目逻辑入口</span></span>
<span class="line"><span>  --permission.ts      项目的权限路由</span></span>
<span class="line"><span>--.editorconfig        项目规范，和setting.json差不多，区别是可以在webstorm使用</span></span>
<span class="line"><span>--.env                 项目环境</span></span>
<span class="line"><span>--.env.development     项目开发环境</span></span>
<span class="line"><span>--.env.production      项目生产环境</span></span>
<span class="line"><span>--.env.test            项目测试环境</span></span>
<span class="line"><span>--.eslintignore        eslint忽略文件</span></span>
<span class="line"><span>--.eslintrc            eslint配置文件</span></span>
<span class="line"><span>--.gitignore           git忽略文件</span></span>
<span class="line"><span>--.gitattributes       git配置文件</span></span>
<span class="line"><span>--.npmrc               npm配置文件</span></span>
<span class="line"><span>--.prettierrc.js       prettier配置文件</span></span>
<span class="line"><span>--.stylelintignore     less忽略文件</span></span>
<span class="line"><span>--commitlint.config.js 项目commit提交规范配置文件</span></span>
<span class="line"><span>--index.html           工程入口</span></span>
<span class="line"><span>--LICENSE              版权声明文件</span></span>
<span class="line"><span>--package.json         项目配置文件</span></span>
<span class="line"><span>--pnpm-lock.yaml       项目pnpm-lock文件</span></span>
<span class="line"><span>--README-zh_CN.md      中文阅读文件</span></span>
<span class="line"><span>--README.md            英文阅读文件</span></span>
<span class="line"><span>--stylelint.config.js  css配置文件</span></span>
<span class="line"><span>--tsconfig.json        TypeScript配置文件</span></span>
<span class="line"><span>--vite.config.ts       Vite配置文件</span></span></code></pre></div><p>目录规范和文件规范，请参考</p><p><a href="https://github.com/difffffft/tdesign-vue-next-starter" target="_blank" rel="noreferrer">difffffft/tdesign-vue-next-starter: A starter-kit for TDesign Vue Next UI components (github.com)</a></p>`,5),t=[i];function c(o,r,d,m,f,g){return n(),a("div",null,t)}const h=s(l,[["render",c]]);export{u as __pageData,h as default};
