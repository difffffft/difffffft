import{_ as a,c as e,o as t,U as o}from"./chunks/framework.hWf9kaa6.js";const b=JSON.parse('{"title":"机器学习概述","description":"","frontmatter":{},"headers":[],"relativePath":"mds/ai/机器学习概述/index.md","filePath":"mds/ai/机器学习概述/index.md","lastUpdated":1704771655000}'),p={name:"mds/ai/机器学习概述/index.md"},i=o('<h1 id="机器学习概述" tabindex="-1">机器学习概述 <a class="header-anchor" href="#机器学习概述" aria-label="Permalink to &quot;机器学习概述&quot;">​</a></h1><p>机器学习是一种人工智能领域的技术，通过让计算机从数据中学习和改进，而不需要明确地编程指令。它利用统计学和计算机科学的方法来让计算机从经验中学习，生成模型，并用于预测和决策。</p><p>机器学习可以分为监督学习、无监督学习和强化学习三种类型。在监督学习中，机器学习模型通过从标记的训练数据中学习，来预测新的未标记数据的输出。而在无监督学习中，模型从未标记的数据中学习，以发现数据中的模式和结构。强化学习则是通过与环境的交互来学习最优决策策略。</p><p>机器学习在许多领域有广泛的应用，包括图像识别、自然语言处理、推荐系统、金融预测等。它的主要目标是通过分析和解释数据，为决策提供支持，优化算法和系统的性能。</p><h2 id="神经网络" tabindex="-1">神经网络 <a class="header-anchor" href="#神经网络" aria-label="Permalink to &quot;神经网络&quot;">​</a></h2><p>神经网络是机器学习中的一个分支，当遇到比较复杂的业务的时候，可以考虑上神经网络，基础业务机器学习也能完成。 机器学习的本质是在人类的历史数据中，寻找规律，一旦事物发展脱离规律，机器学习算法是不能预测的，所以说也不是万能的。</p><h2 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h2><p>数据 + 算法 = 机器学习</p><h2 id="数据集" tabindex="-1">数据集 <a class="header-anchor" href="#数据集" aria-label="Permalink to &quot;数据集&quot;">​</a></h2><p>数据集说白了就是数据库，一堆数据，你也可以理解为excel</p><p>样本：一行数据</p><p>特征：一列数据</p><p>目标: 模型要预测的哪一列</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>注：特征也可以叫做特征向量，数据集也可以用矩阵表示，原理都差不多，就是一堆数据，换了一种格式在存储，用矩阵是为了方便计算。因为python有很多矩阵库。 一行数据，也就是样本，也可以叫做维度，在矩阵中。</p></div><h2 id="机器学习分类" tabindex="-1">机器学习分类 <a class="header-anchor" href="#机器学习分类" aria-label="Permalink to &quot;机器学习分类&quot;">​</a></h2><h3 id="监督学习" tabindex="-1">- 监督学习 <a class="header-anchor" href="#监督学习" aria-label="Permalink to &quot;- 监督学习&quot;">​</a></h3><p>监督学习是一种机器学习的方法，其中从标记的训练数据集中学习模型来预测目标变量的值。在监督学习中，每个训练样本都有对应的输入特征和期望的输出标签。模型根据输入特征预测输出标签，并通过与期望输出标签的比较来调整模型参数，以使模型的预测结果尽可能接近目标值。常见的监督学习算法包括线性回归、逻辑回归、决策树、支持向量机和神经网络等。</p><p>说人话就是，给一堆正常的数据，模型预测的值，通过代码中调整参数要和原来的值无限接近。</p><p>通常是分类问题，和回归问题。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>说人话就是，垃圾分类，房价预测。</p></div><h4 id="分类问题" tabindex="-1">分类问题 <a class="header-anchor" href="#分类问题" aria-label="Permalink to &quot;分类问题&quot;">​</a></h4><p>分类问题是一种机器学习问题，其目标是根据输入数据将其分为不同的类别或标签。在分类问题中，我们试图学习一个模型来预测新的输入数据所属的类别。</p><p>分类可以分为两类：二分类和多分类。二分类是将数据分为两个类别，比如判断一封邮件是垃圾邮件还是正常邮件。多分类是将数据分为多个类别，比如判断图片是猫、狗还是鸟类。</p><p>解决分类问题的常见算法包括逻辑回归、支持向量机、决策树、随机森林、朴素贝叶斯等。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>说人话就是，二分类就是能不能，会不会...。多分类问题就是，这个猫是什么品种，这个花是什么品种。</p></div><h4 id="回归问题" tabindex="-1">回归问题 <a class="header-anchor" href="#回归问题" aria-label="Permalink to &quot;回归问题&quot;">​</a></h4><p>回归问题是指根据输入的数据来预测一个连续值的问题。在回归问题中，我们试图找到输入特征和输出值之间的关系，并使用该模型对新的输入进行预测。</p><p>回归问题与分类问题不同，分类问题是根据输入数据判断其属于哪个类别。</p><p>在解决回归问题时，常用的算法包括线性回归、岭回归、Lasso回归、决策树回归、随机森林回归、支持向量回归等。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>说人话就是，类似与一元一次方程</p></div><h3 id="无监督学习" tabindex="-1">- 无监督学习 <a class="header-anchor" href="#无监督学习" aria-label="Permalink to &quot;- 无监督学习&quot;">​</a></h3><p>无监督学习是机器学习的一种类型，它与监督学习不同，因为无监督学习不需要标记的输出。在无监督学习中，我们试图从给定的输入数据中发现隐藏的模式、结构和关系。</p><p>无监督学习的目标通常是聚类和降维。聚类是将输入数据分为不同的组或簇，使组内的样本相似，而组间的样本不相似。常见的聚类算法包括K-Means、层次聚类和DBSCAN等。降维是将高维数据映射到低维空间，以保留数据的重要信息。常见的降维算法包括主成分分析（PCA）和 t-SNE 等。</p><p>无监督学习常常用于数据探索、数据可视化以及预处理步骤。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>说人话，就是一堆数据，进行自动分组。将动物们分为猫和狗还是大象... 数据降维，例如拍照片，现实世界都是三维的，我们看到一个苹果，能分辨出它是苹果，我们看到一个照片，也能分辨出它是苹果。但是看到照片，和视频所占的资源大小不同。产生了数据降维。</p></div><h3 id="半监督学习" tabindex="-1">- 半监督学习 <a class="header-anchor" href="#半监督学习" aria-label="Permalink to &quot;- 半监督学习&quot;">​</a></h3><p>半监督学习是一种介于监督学习和无监督学习之间的机器学习方法。在半监督学习中，我们同时使用有标签和无标签的数据来构建模型。</p><p>在传统的监督学习中，我们需要大量的有标签的数据来训练模型。而在半监督学习中，我们将无标签的数据作为额外信息，用于帮助模型提高性能。这是因为无标签数据通常可以提供更多的信息和更广泛的数据分布，从而改善模型的泛化能力。</p><p>半监督学习的一个常见方法是使用标签传播算法或者生成模型进行训练。标签传播算法尝试利用有标签数据的标签信息，将这些标签传播到无标签数据中。生成模型则通过建立关于数据生成过程的模型，从而对无标签数据进行估计和分类。</p><p>半监督学习在数据标注困难或昂贵的情况下非常有用，可以高效地利用有限的标记数据来获得更好的模型性能。</p><h3 id="强化学习" tabindex="-1">- 强化学习 <a class="header-anchor" href="#强化学习" aria-label="Permalink to &quot;- 强化学习&quot;">​</a></h3><p>强化学习是一种机器学习的方法，其目标是通过与环境的交互学习最优的行为策略。在强化学习中，智能体（agent）通过尝试不同的行动来探索环境，并从环境中得到奖励或惩罚作为反馈，以指导它的学习过程。</p><p>强化学习主要包括以下几个要素：</p><p>状态（State）：描述环境的当前情况或状态。 行动（Action）：智能体在某个状态下可以采取的可选行动。 奖励（Reward）：智能体根据它的行动在环境中获得的奖励或惩罚信号。 策略（Policy）：智能体在给定状态下选择行动的策略。 值函数（Value Function）：用于评估智能体在不同状态下的价值或预期回报。 环境模型（Environment Model）：描述环境的转移动力学，即在某个状态下采取某个行动后，转移到下一个状态的概率。 强化学习的目标是通过学习最优的策略，使智能体能够最大化累积奖励。常见的强化学习算法包括Q-learning、SARSA、深度强化学习（Deep Reinforcement Learning）等。</p><p>强化学习在许多领域中得到广泛应用，如自动驾驶、机器人控制、游戏AI等。通过与环境的交互和不断的试错，强化学习使得智能体能够自主学习并逐步提高性能。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>说白了，经验数据是靠自己打出来的。</p></div>',46),l=[i];function s(c,r,n,d,h,u){return t(),e("div",null,l)}const _=a(p,[["render",s]]);export{b as __pageData,_ as default};
